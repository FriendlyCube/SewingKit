plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.84'
}

version = '1.8.6'
group = 'dev.gigaherz.sewingkit'

Provider<String> minecraftVersion(Transformer<String, String> mapper) {
    return project.userDevRuntime.runtimes.map(r -> r.values().first().specification.minecraftVersion).map(mapper)
}

base {
    archivesName = minecraftVersion { "SewingKit-${it}" }
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

sourceSets {
    main.resources.srcDirs += 'src/main/generated_resources'
}

repositories {
    maven { // JEI
        url "https://maven.blamejared.com/"
        // fallback: url = "https://modmaven.dev"
    }
    maven { // CURIOS
        url "https://maven.theillusivec4.top/"
    }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

subsystems {
    parchment {
        minecraftVersion="1.20.3"
        mappingsVersion="2023.12.31"
    }
}

minecraft.accessTransformers.file rootProject.file('src/main/resources/META-INF/accesstransformer.cfg')

runs {
    // applies to all the run configs below
    configureEach {
        systemProperty 'forge.logging.markers', '' // 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'

        //ideaModule "${project.name}.main"

        workingDirectory project.file('run')

        //programArguments.addAll "--mixin=jsonthings.mixins.json"

        modSource project.sourceSets.main
    }

    client {
    }

    server {
    }

    data {
        programArguments.addAll '--mod', 'sewingkit', '--all', '--output', file('src/main/generated_resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

dependencies {
    implementation 'net.neoforged:neoforge:20.4.143-beta'

    compileOnly "mezz.jei:jei-1.20.4-common-api:17.3.0.49"
    runtimeOnly "mezz.jei:jei-1.20.4-common:17.3.0.49"
    compileOnly "mezz.jei:jei-1.20.4-neoforge-api:17.3.0.49"
    runtimeOnly "mezz.jei:jei-1.20.4-neoforge:17.3.0.49"

    //compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.19.2-5.1.1.0")
    //runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.19.2-5.1.1.0")

    //runtimeOnly fg.deobf("curse.maven:cosmetic-armor-reworked-237307:3920646")
}

jar {
    from('/') {
        include 'LICENSE.txt'
    }

    manifest {
        attributes([
            "Specification-Title": "sewingkit",
            "Specification-Vendor": "gigaherz",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": "sewingkit",
            "Implementation-Version": project.version,
            "Implementation-Vendor" :"gigaherz",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "Automatic-Module-Name": "dev.gigaherz.sewingkit"
        ])
    }
}

tasks.register('sourcesJar', Jar) {
    dependsOn classes
    from sourceSets.main.allSource
    archiveClassifier = 'sources'

    from('/') {
        include 'LICENSE.txt'
    }
}

tasks.withType(GenerateModuleMetadata) {
    enabled = false
}

project.afterEvaluate {
    publish.dependsOn('build')
    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId project.archivesBaseName
                from components.java

                //artifact sourceJar
                artifact sourcesJar
            }
        }

        repositories {
            if (findProperty("RELEASE") && System.env.giga_maven_host != null) {
                System.out.println("Remote publish enabled on " + System.env.giga_maven_host)
                maven {
                    url System.env.giga_maven_host
                    credentials {
                        username System.env.giga_maven_user
                        password System.env.giga_maven_password
                    }
                }
            }
            else {
                System.out.println("Remote publish disabled.")
                maven {
                    url "$projectDir/../CommonMaven"
                }
            }
        }
    }
}